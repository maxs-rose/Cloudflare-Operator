name: Release
on:
  push:
    branches: ["main"]

env:
  IMAGE_PATH: maxs-rose
  IMAGE_NAME: cloudflared-operator

jobs:
  release-please:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - id: release
        name: Release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: simple
          config-file: release-please-config.json
          skip-labeling: false
  publish:
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      attestations: write
    needs: release-please
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Extract metadata
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ env.IMAGE_PATH }}/${{ env.IMAGE_NAME }}:${{ needs.release-please.outputs.tag_name }}
          tags: type=raw,value=${{ needs.release.outputs.tag_name }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          file: ./CloudflareOperator/Dockerfile
          push: true
          provenance: mode=max
          tags: ghcr.io/${{ env.IMAGE_PATH }}/${{ env.IMAGE_NAME }}:${{ needs.release-please.outputs.tag_name }}
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Restore
        run: dotnet restore && dotnet tool restore
      - name: Build Operator Config
        run: dotnet kubeops g op --out config cloudflared-operator CloudflareOperator/CloudflareOperator.csproj
      - name: Update Image
        run: sed -i 's/accessible-docker-image/ghcr.io\/${{ env.IMAGE_PATH }}\/${{ env.IMAGE_NAME }}/g' config/kustomization.yaml
      - name: Update Image Tag
        run: sed -i 's/latest/${{ needs.release-please.outputs.tag_name }}/g' config/kustomization.yaml
      - name: Install kubectl
        run: curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
      - name: Build Deployment
        run: kubectl kustomize ./config > ./config/bundle.yaml
      - name: Attach Deployment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ needs.release-please.outputs.tag_name }} ./config/bundle.yaml

